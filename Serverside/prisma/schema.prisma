// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//defining the post 

model Post {
  id String @id @default(uuid())
  title String
  body String
    comments Comment []
}

//defining the user


model User {
    id String @id @default(uuid())
    name String
    comments Comment[]
    Likes Like []
}
//defining comments and relationships


model Comment {
    id String @id @default(uuid())
    message String
    created_at DateTime @default(now())
    updated_at DateTime @updatedAt
    user User @relation(fields: [userId], references: [id], onDelete: Cascade)
     userId String
     post Post @relation(fields: [post_id], references: [id], onDelete: Cascade)
     post_id String
     parent Comment? @relation("ParentChild", fields: [parent_id], references: [id], onDelete: Cascade)
     children Comment [] @relation("ParentChild")
     parent_id String?
     Likes Like []
}

// defining Like and Relationships

model Like {
user User @relation(fields: [userId], references: [id], onDelete: Cascade)
comment Comment @relation(fields: [comment_id], references: [id], onDelete: Cascade)
 userId String
 comment_id String

 @@id([userId, comment_id])

}
   

